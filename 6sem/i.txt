Семафоры 
System V IPC
Отличается от семафора Дейкстры только одноай операцией (дождаться нуля)
int semget(key_t k, int n, int flags)
n - кол-во семафоров
Все переменные семафоров равны нулю после создания
int semctl(:d, IPC_RMID, NULL)
Операции над семафором:
int semop(id, struct sembuf,    )
все переданные операции либо выполняются транзакционно
semnum
semop
semflg 
IPC_NOWAIT or 
SEM_UNDO - в ядре для каждого семафора заводится доп поле, поэтому модифируется не только поле самафора, но и эта дополнительная переменная, которая может уходить в минус (как откатить значение самафора после его смерти) то есть процесс умирает и значение семафора откатывается в ноль


разделяемая память:
int shmget(keym, size, flags)
int shmctl
Объект будет удален, когда будет выщвана эта функция и не будет ни одного процесса, который будет использовать эту разд память
void shmat(:d, NULL, 0) (malloc)
void shmdt(void)	(free)


Задача 3: Первую прогу помним, да, а теперь тоже самое через разделяемую память и семафоры.
(Нужно детектить смерть другого процесса(

